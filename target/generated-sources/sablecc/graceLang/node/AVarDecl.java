/* This file was generated by SableCC (http://www.sablecc.org/). */

package graceLang.node;

import java.util.*;
import graceLang.analysis.*;

@SuppressWarnings("nls")
public final class AVarDecl extends PVarDecl
{
    private TVar _var_;
    private TId _id_;
    private final LinkedList<PMoreIds> _moreIds_ = new LinkedList<PMoreIds>();
    private TAs _as_;
    private PDataType _dataType_;
    private PArrayInit _arrayInit_;
    private TSeparator _separator_;

    public AVarDecl()
    {
        // Constructor
    }

    public AVarDecl(
        @SuppressWarnings("hiding") TVar _var_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") List<PMoreIds> _moreIds_,
        @SuppressWarnings("hiding") TAs _as_,
        @SuppressWarnings("hiding") PDataType _dataType_,
        @SuppressWarnings("hiding") PArrayInit _arrayInit_,
        @SuppressWarnings("hiding") TSeparator _separator_)
    {
        // Constructor
        setVar(_var_);

        setId(_id_);

        setMoreIds(_moreIds_);

        setAs(_as_);

        setDataType(_dataType_);

        setArrayInit(_arrayInit_);

        setSeparator(_separator_);

    }

    @Override
    public Object clone()
    {
        return new AVarDecl(
            cloneNode(this._var_),
            cloneNode(this._id_),
            cloneList(this._moreIds_),
            cloneNode(this._as_),
            cloneNode(this._dataType_),
            cloneNode(this._arrayInit_),
            cloneNode(this._separator_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarDecl(this);
    }

    public TVar getVar()
    {
        return this._var_;
    }

    public void setVar(TVar node)
    {
        if(this._var_ != null)
        {
            this._var_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._var_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public LinkedList<PMoreIds> getMoreIds()
    {
        return this._moreIds_;
    }

    public void setMoreIds(List<PMoreIds> list)
    {
        this._moreIds_.clear();
        this._moreIds_.addAll(list);
        for(PMoreIds e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public TAs getAs()
    {
        return this._as_;
    }

    public void setAs(TAs node)
    {
        if(this._as_ != null)
        {
            this._as_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._as_ = node;
    }

    public PDataType getDataType()
    {
        return this._dataType_;
    }

    public void setDataType(PDataType node)
    {
        if(this._dataType_ != null)
        {
            this._dataType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._dataType_ = node;
    }

    public PArrayInit getArrayInit()
    {
        return this._arrayInit_;
    }

    public void setArrayInit(PArrayInit node)
    {
        if(this._arrayInit_ != null)
        {
            this._arrayInit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._arrayInit_ = node;
    }

    public TSeparator getSeparator()
    {
        return this._separator_;
    }

    public void setSeparator(TSeparator node)
    {
        if(this._separator_ != null)
        {
            this._separator_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._separator_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._var_)
            + toString(this._id_)
            + toString(this._moreIds_)
            + toString(this._as_)
            + toString(this._dataType_)
            + toString(this._arrayInit_)
            + toString(this._separator_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._var_ == child)
        {
            this._var_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._moreIds_.remove(child))
        {
            return;
        }

        if(this._as_ == child)
        {
            this._as_ = null;
            return;
        }

        if(this._dataType_ == child)
        {
            this._dataType_ = null;
            return;
        }

        if(this._arrayInit_ == child)
        {
            this._arrayInit_ = null;
            return;
        }

        if(this._separator_ == child)
        {
            this._separator_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._var_ == oldChild)
        {
            setVar((TVar) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        for(ListIterator<PMoreIds> i = this._moreIds_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PMoreIds) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._as_ == oldChild)
        {
            setAs((TAs) newChild);
            return;
        }

        if(this._dataType_ == oldChild)
        {
            setDataType((PDataType) newChild);
            return;
        }

        if(this._arrayInit_ == oldChild)
        {
            setArrayInit((PArrayInit) newChild);
            return;
        }

        if(this._separator_ == oldChild)
        {
            setSeparator((TSeparator) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
