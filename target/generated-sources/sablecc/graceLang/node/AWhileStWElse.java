/* This file was generated by SableCC (http://www.sablecc.org/). */

package graceLang.node;

import graceLang.analysis.*;

@SuppressWarnings("nls")
public final class AWhileStWElse extends PStWElse
{
    private PWhileWElse _whileWElse_;

    public AWhileStWElse()
    {
        // Constructor
    }

    public AWhileStWElse(
        @SuppressWarnings("hiding") PWhileWElse _whileWElse_)
    {
        // Constructor
        setWhileWElse(_whileWElse_);

    }

    @Override
    public Object clone()
    {
        return new AWhileStWElse(
            cloneNode(this._whileWElse_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAWhileStWElse(this);
    }

    public PWhileWElse getWhileWElse()
    {
        return this._whileWElse_;
    }

    public void setWhileWElse(PWhileWElse node)
    {
        if(this._whileWElse_ != null)
        {
            this._whileWElse_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._whileWElse_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._whileWElse_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._whileWElse_ == child)
        {
            this._whileWElse_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._whileWElse_ == oldChild)
        {
            setWhileWElse((PWhileWElse) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
