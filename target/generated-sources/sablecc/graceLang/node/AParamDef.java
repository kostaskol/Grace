/* This file was generated by SableCC (http://www.sablecc.org/). */

package graceLang.node;

import java.util.*;
import graceLang.analysis.*;

@SuppressWarnings("nls")
public final class AParamDef extends PParamDef
{
    private TRef _ref_;
    private TId _id_;
    private final LinkedList<PMultipleParams> _multipleParams_ = new LinkedList<PMultipleParams>();
    private TAs _as_;
    private PParType _parType_;
    private PMoreParamDef _moreParamDef_;

    public AParamDef()
    {
        // Constructor
    }

    public AParamDef(
        @SuppressWarnings("hiding") TRef _ref_,
        @SuppressWarnings("hiding") TId _id_,
        @SuppressWarnings("hiding") List<PMultipleParams> _multipleParams_,
        @SuppressWarnings("hiding") TAs _as_,
        @SuppressWarnings("hiding") PParType _parType_,
        @SuppressWarnings("hiding") PMoreParamDef _moreParamDef_)
    {
        // Constructor
        setRef(_ref_);

        setId(_id_);

        setMultipleParams(_multipleParams_);

        setAs(_as_);

        setParType(_parType_);

        setMoreParamDef(_moreParamDef_);

    }

    @Override
    public Object clone()
    {
        return new AParamDef(
            cloneNode(this._ref_),
            cloneNode(this._id_),
            cloneList(this._multipleParams_),
            cloneNode(this._as_),
            cloneNode(this._parType_),
            cloneNode(this._moreParamDef_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAParamDef(this);
    }

    public TRef getRef()
    {
        return this._ref_;
    }

    public void setRef(TRef node)
    {
        if(this._ref_ != null)
        {
            this._ref_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ref_ = node;
    }

    public TId getId()
    {
        return this._id_;
    }

    public void setId(TId node)
    {
        if(this._id_ != null)
        {
            this._id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._id_ = node;
    }

    public LinkedList<PMultipleParams> getMultipleParams()
    {
        return this._multipleParams_;
    }

    public void setMultipleParams(List<PMultipleParams> list)
    {
        this._multipleParams_.clear();
        this._multipleParams_.addAll(list);
        for(PMultipleParams e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    public TAs getAs()
    {
        return this._as_;
    }

    public void setAs(TAs node)
    {
        if(this._as_ != null)
        {
            this._as_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._as_ = node;
    }

    public PParType getParType()
    {
        return this._parType_;
    }

    public void setParType(PParType node)
    {
        if(this._parType_ != null)
        {
            this._parType_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parType_ = node;
    }

    public PMoreParamDef getMoreParamDef()
    {
        return this._moreParamDef_;
    }

    public void setMoreParamDef(PMoreParamDef node)
    {
        if(this._moreParamDef_ != null)
        {
            this._moreParamDef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._moreParamDef_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._ref_)
            + toString(this._id_)
            + toString(this._multipleParams_)
            + toString(this._as_)
            + toString(this._parType_)
            + toString(this._moreParamDef_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._ref_ == child)
        {
            this._ref_ = null;
            return;
        }

        if(this._id_ == child)
        {
            this._id_ = null;
            return;
        }

        if(this._multipleParams_.remove(child))
        {
            return;
        }

        if(this._as_ == child)
        {
            this._as_ = null;
            return;
        }

        if(this._parType_ == child)
        {
            this._parType_ = null;
            return;
        }

        if(this._moreParamDef_ == child)
        {
            this._moreParamDef_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._ref_ == oldChild)
        {
            setRef((TRef) newChild);
            return;
        }

        if(this._id_ == oldChild)
        {
            setId((TId) newChild);
            return;
        }

        for(ListIterator<PMultipleParams> i = this._multipleParams_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PMultipleParams) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        if(this._as_ == oldChild)
        {
            setAs((TAs) newChild);
            return;
        }

        if(this._parType_ == oldChild)
        {
            setParType((PParType) newChild);
            return;
        }

        if(this._moreParamDef_ == oldChild)
        {
            setMoreParamDef((PMoreParamDef) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
