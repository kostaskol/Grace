/* This file was generated by SableCC (http://www.sablecc.org/). */

package graceLang.node;

import graceLang.analysis.*;

@SuppressWarnings("nls")
public final class ALValStrLVal extends PLVal
{
    private TStringConst _stringConst_;

    public ALValStrLVal()
    {
        // Constructor
    }

    public ALValStrLVal(
        @SuppressWarnings("hiding") TStringConst _stringConst_)
    {
        // Constructor
        setStringConst(_stringConst_);

    }

    @Override
    public Object clone()
    {
        return new ALValStrLVal(
            cloneNode(this._stringConst_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALValStrLVal(this);
    }

    public TStringConst getStringConst()
    {
        return this._stringConst_;
    }

    public void setStringConst(TStringConst node)
    {
        if(this._stringConst_ != null)
        {
            this._stringConst_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringConst_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._stringConst_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._stringConst_ == child)
        {
            this._stringConst_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._stringConst_ == oldChild)
        {
            setStringConst((TStringConst) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
