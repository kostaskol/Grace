/* This file was generated by SableCC (http://www.sablecc.org/). */

package graceLang.parser;

import graceLang.node.*;
import graceLang.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    @Override
    public void caseTPlus(@SuppressWarnings("unused") TPlus node)
    {
        this.index = 0;
    }

    @Override
    public void caseTMinus(@SuppressWarnings("unused") TMinus node)
    {
        this.index = 1;
    }

    @Override
    public void caseTTimes(@SuppressWarnings("unused") TTimes node)
    {
        this.index = 2;
    }

    @Override
    public void caseTDiv(@SuppressWarnings("unused") TDiv node)
    {
        this.index = 3;
    }

    @Override
    public void caseTMod(@SuppressWarnings("unused") TMod node)
    {
        this.index = 4;
    }

    @Override
    public void caseTAssign(@SuppressWarnings("unused") TAssign node)
    {
        this.index = 5;
    }

    @Override
    public void caseTChar(@SuppressWarnings("unused") TChar node)
    {
        this.index = 6;
    }

    @Override
    public void caseTInt(@SuppressWarnings("unused") TInt node)
    {
        this.index = 7;
    }

    @Override
    public void caseTIf(@SuppressWarnings("unused") TIf node)
    {
        this.index = 8;
    }

    @Override
    public void caseTThen(@SuppressWarnings("unused") TThen node)
    {
        this.index = 9;
    }

    @Override
    public void caseTElse(@SuppressWarnings("unused") TElse node)
    {
        this.index = 10;
    }

    @Override
    public void caseTNot(@SuppressWarnings("unused") TNot node)
    {
        this.index = 11;
    }

    @Override
    public void caseTAnd(@SuppressWarnings("unused") TAnd node)
    {
        this.index = 12;
    }

    @Override
    public void caseTOr(@SuppressWarnings("unused") TOr node)
    {
        this.index = 13;
    }

    @Override
    public void caseTWhile(@SuppressWarnings("unused") TWhile node)
    {
        this.index = 14;
    }

    @Override
    public void caseTDo(@SuppressWarnings("unused") TDo node)
    {
        this.index = 15;
    }

    @Override
    public void caseTNlE(@SuppressWarnings("unused") TNlE node)
    {
        this.index = 16;
    }

    @Override
    public void caseTTabE(@SuppressWarnings("unused") TTabE node)
    {
        this.index = 17;
    }

    @Override
    public void caseTCrE(@SuppressWarnings("unused") TCrE node)
    {
        this.index = 18;
    }

    @Override
    public void caseTNullTermE(@SuppressWarnings("unused") TNullTermE node)
    {
        this.index = 19;
    }

    @Override
    public void caseTBackslashE(@SuppressWarnings("unused") TBackslashE node)
    {
        this.index = 20;
    }

    @Override
    public void caseTApostropheE(@SuppressWarnings("unused") TApostropheE node)
    {
        this.index = 21;
    }

    @Override
    public void caseTQuotesE(@SuppressWarnings("unused") TQuotesE node)
    {
        this.index = 22;
    }

    @Override
    public void caseTHexaE(@SuppressWarnings("unused") THexaE node)
    {
        this.index = 23;
    }

    @Override
    public void caseTVar(@SuppressWarnings("unused") TVar node)
    {
        this.index = 24;
    }

    @Override
    public void caseTAs(@SuppressWarnings("unused") TAs node)
    {
        this.index = 25;
    }

    @Override
    public void caseTFun(@SuppressWarnings("unused") TFun node)
    {
        this.index = 26;
    }

    @Override
    public void caseTNothing(@SuppressWarnings("unused") TNothing node)
    {
        this.index = 27;
    }

    @Override
    public void caseTRef(@SuppressWarnings("unused") TRef node)
    {
        this.index = 28;
    }

    @Override
    public void caseTReturn(@SuppressWarnings("unused") TReturn node)
    {
        this.index = 29;
    }

    @Override
    public void caseTOpenPar(@SuppressWarnings("unused") TOpenPar node)
    {
        this.index = 30;
    }

    @Override
    public void caseTClosePar(@SuppressWarnings("unused") TClosePar node)
    {
        this.index = 31;
    }

    @Override
    public void caseTOpenCbrack(@SuppressWarnings("unused") TOpenCbrack node)
    {
        this.index = 32;
    }

    @Override
    public void caseTCloseCbrack(@SuppressWarnings("unused") TCloseCbrack node)
    {
        this.index = 33;
    }

    @Override
    public void caseTOpenBrack(@SuppressWarnings("unused") TOpenBrack node)
    {
        this.index = 34;
    }

    @Override
    public void caseTCloseBrack(@SuppressWarnings("unused") TCloseBrack node)
    {
        this.index = 35;
    }

    @Override
    public void caseTComma(@SuppressWarnings("unused") TComma node)
    {
        this.index = 36;
    }

    @Override
    public void caseTOcBrack(@SuppressWarnings("unused") TOcBrack node)
    {
        this.index = 37;
    }

    @Override
    public void caseTSeparator(@SuppressWarnings("unused") TSeparator node)
    {
        this.index = 38;
    }

    @Override
    public void caseTNumber(@SuppressWarnings("unused") TNumber node)
    {
        this.index = 39;
    }

    @Override
    public void caseTMultComment(@SuppressWarnings("unused") TMultComment node)
    {
        this.index = 40;
    }

    @Override
    public void caseTOperation(@SuppressWarnings("unused") TOperation node)
    {
        this.index = 41;
    }

    @Override
    public void caseTCompOperator(@SuppressWarnings("unused") TCompOperator node)
    {
        this.index = 42;
    }

    @Override
    public void caseTId(@SuppressWarnings("unused") TId node)
    {
        this.index = 43;
    }

    @Override
    public void caseTCharConst(@SuppressWarnings("unused") TCharConst node)
    {
        this.index = 44;
    }

    @Override
    public void caseTStringConst(@SuppressWarnings("unused") TStringConst node)
    {
        this.index = 45;
    }

    @Override
    public void caseTNumOrId(@SuppressWarnings("unused") TNumOrId node)
    {
        this.index = 46;
    }

    @Override
    public void caseEOF(@SuppressWarnings("unused") EOF node)
    {
        this.index = 47;
    }
}
