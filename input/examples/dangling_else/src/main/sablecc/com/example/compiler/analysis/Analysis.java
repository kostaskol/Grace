/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.example.compiler.analysis;

import com.example.compiler.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAStmtList(AStmtList node);
    void caseANoopStmt(ANoopStmt node);
    void caseAAssignmentStmt(AAssignmentStmt node);
    void caseAIfStmt(AIfStmt node);
    void caseAWhileStmt(AWhileStmt node);
    void caseABlockStmt(ABlockStmt node);
    void caseANoElseIfStmt(ANoElseIfStmt node);
    void caseAWithElseIfStmt(AWithElseIfStmt node);
    void caseANoopStmtWithElse(ANoopStmtWithElse node);
    void caseAAssignmentStmtWithElse(AAssignmentStmtWithElse node);
    void caseAIfStmtWithElse(AIfStmtWithElse node);
    void caseAWhileStmtWithElse(AWhileStmtWithElse node);
    void caseABlockStmtWithElse(ABlockStmtWithElse node);
    void caseAIfElseStmt(AIfElseStmt node);
    void caseAPwhile(APwhile node);

    void caseTExp(TExp node);
    void caseTIf(TIf node);
    void caseTThen(TThen node);
    void caseTElse(TElse node);
    void caseTLbrace(TLbrace node);
    void caseTRbrace(TRbrace node);
    void caseTSemicolon(TSemicolon node);
    void caseTIdentifier(TIdentifier node);
    void caseTAssignOp(TAssignOp node);
    void caseTWhile(TWhile node);
    void caseTDo(TDo node);
    void caseTWhitespace(TWhitespace node);
    void caseEOF(EOF node);
    void caseInvalidToken(InvalidToken node);
}
